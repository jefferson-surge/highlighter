{"version":3,"sources":["Token.js","App.js","index.js"],"names":["Token","props","className","this","transparency","onMouseEnter","style","backgroundColor","token","React","Component","App","state","refToken","passage","tokens","split","tokenSimScores","threshold","setState","distance","Math","pow","tokenEls","map","index","handleMouseEnter","distanceToTransparency","forEach","simScores","abs","length","max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAkBeA,E,kDAdX,WAAYC,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,OACL,OAAO,qBACHC,UAAsC,GAA3BC,KAAKF,MAAMG,aAAoB,WAAa,QACvDC,aAAc,kBAAM,EAAKJ,MAAMI,gBAE/BC,MAAO,CAAEC,gBAAiB,qBAAuBJ,KAAKF,MAAMG,aAAe,KAJxE,SAKLD,KAAKF,MAAMO,OAFJL,KAAKF,MAAMG,kB,GATRK,IAAMC,WCmDXC,E,kDA5CX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAEDW,MAAQ,CACTC,SAAU,KACVC,QAASb,EAAMa,QACfC,OAAQd,EAAMa,QAAQE,MAAM,KAC5BC,eAAgBhB,EAAMgB,eACtBC,UAAWjB,EAAMiB,WAAa,IARnB,E,oDAYnB,SAAiBV,GACbL,KAAKgB,SAAS,CAAEN,SAAUL,M,oCAK9B,SAAuBY,GACnB,OAAOC,KAAKC,IAAIF,EAAWjB,KAAKS,MAAMM,UAAYE,EAAW,EAAG,K,oBAGpE,WAAU,IAAD,OACCG,EAAWpB,KAAKS,MAAMG,OAAOS,KAAI,SAAChB,EAAOiB,GAAR,OAAmB,cAAC,EAAD,CACtDjB,MAAOA,EACPiB,MAAOA,EACPpB,aAAc,kBAAM,EAAKqB,iBAAiBlB,IAC1CJ,aAAc,EAAKQ,MAAMC,SAAW,EAAKc,uBAAuB,EAAKf,MAAMK,eAAe,EAAKL,MAAMC,UAAUL,IAAU,OAG7H,OACI,qBAAKN,UAAU,MAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qDACA,mBAAGA,UAAU,eAAb,qDACA,qBAAKA,UAAU,gBAAf,SACKqB,a,GA1CPd,IAAMC,WCElBI,EAAU,mYACVC,EAASD,EAAQE,MAAM,KAEvBC,EAAiB,GACvBF,EAAOa,SAAQ,SAACf,GACZ,IAAIgB,EAAY,GAChBd,EAAOa,SAAQ,SAACpB,GAEZqB,EAAUrB,GAAS,EAAKa,KAAKS,IAAIjB,EAASkB,OAASvB,EAAMuB,QAAUV,KAAKW,IAAInB,EAASkB,OAAQvB,EAAMuB,QAC/FvB,GAASK,IAAYgB,EAAUrB,GAA4B,IAAnBqB,EAAUrB,OAE1DS,EAAeJ,GAAYgB,KAG/BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACQrB,QAASA,EACTI,UAAW,IACXD,eAAgBA,MAG1BmB,SAASC,eAAe,W","file":"static/js/main.afbf32d2.chunk.js","sourcesContent":["import './token.css';\r\nimport React from 'react';\r\n\r\nclass Token extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <div\r\n            className={this.props.transparency == 1 ? \"refToken\" : \"token\" }\r\n            onMouseEnter={() => this.props.onMouseEnter()}\r\n            key={this.props.transparency}\r\n            style={{ backgroundColor: 'rgba(128, 0, 128, ' + this.props.transparency + ')' }}\r\n        >{this.props.token}</div>;\r\n    }\r\n}\r\n\r\nexport default Token;","import './App.css';\r\nimport Token from './Token.js';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n    /* Props: \r\n     *  - passage, a passage of text\r\n     *  - threshold, the minimum similarity score between a token and the reference token (the one the user's mouse is on) that should be highlighted\r\n     *  - tokenSimScores, a dictionary where each key is a token from passage and each value is a dictionary. In that dictionary, each key is a token and each value is the similarity score between the two key tokens expressed as a decimal between 0 and 1.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            refToken: null,\r\n            passage: props.passage,\r\n            tokens: props.passage.split(\" \"),\r\n            tokenSimScores: props.tokenSimScores,\r\n            threshold: props.threshold || .8,\r\n        };\r\n    }\r\n\r\n    handleMouseEnter(token) {\r\n        this.setState({ refToken: token });\r\n    }\r\n\r\n    // If a token's similarity to the reference token is less than the specified threshold, don't highlight it\r\n    // Otherwise, raise the distance between the two tokens to the 6th power so subtle differences in distance have noticeably different shades\r\n    distanceToTransparency(distance) {\r\n        return Math.pow(distance > this.state.threshold ? distance : 0, 6)\r\n    }\r\n\r\n    render() {\r\n        const tokenEls = this.state.tokens.map((token, index) => (<Token\r\n            token={token}\r\n            index={index}\r\n            onMouseEnter={() => this.handleMouseEnter(token)}\r\n            transparency={this.state.refToken ? this.distanceToTransparency(this.state.tokenSimScores[this.state.refToken][token]) : 0}\r\n        />));\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"highlighterWidget\">\r\n                    <h2>Concept Highlighter</h2>\r\n                    <p className=\"instructions\">Hover over a word to see related words.</p>\r\n                    <div className=\"highlightText\">\r\n                        {tokenEls}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst passage = \"Treasury Secretary Janet Yellen cautioned Thursday that prices could continue to rise for several more months, though she expects the recent startling inflation run to ease over time. In a CNBC interview, the Cabinet official added that she worries about the problems inflation could pose for lower - income families looking to buy homes at a time when real estate values are surging.\";\nconst tokens = passage.split(\" \");\n\nconst tokenSimScores = {};\ntokens.forEach((refToken) => {\n    let simScores = {};\n    tokens.forEach((token) => {\n        // Toy method of calculating similarity scores between words based on whether they have similar numbers of characters\n        simScores[token] = 1 - (Math.abs(refToken.length - token.length) / Math.max(refToken.length, token.length));\n        if (token != refToken) { simScores[token] = simScores[token] * 0.92 }\n    });\n    tokenSimScores[refToken] = simScores;\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n            passage={passage}\n            threshold={.75}\n            tokenSimScores={tokenSimScores}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}